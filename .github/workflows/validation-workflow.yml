# A workflow run is made up of one or more jobs that can run sequentially or in parallel
name: PR Validation
on:
  # This workflow will be triggered when invoked from parent workflow
  workflow_call:
    inputs:
      DEPLOYMENT_ENVIRONMENT:
        required: true
        type: string
    secrets:
      SECRET_URL_PATH:
        required: true
      DOCKER_HUB_UN:
        required: true
      DOCKER_HUB_PASS:
        required: true
      PROD_DOMAIN:
        required: false
jobs:
  deploy:
    name: ${{ inputs.DEPLOYMENT_ENVIRONMENT }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.DEPLOYMENT_ENVIRONMENT }}
    env:
      SECRET_URL_PATH: ${{ secrets.SECRET_URL_PATH }}
      SOURCE_ORG_ALIAS: ${{ vars.SOURCE_ORG_ALIAS }}
      BASE_BRANCH: ${{ vars.BASE_BRANCH }}
      PRODUCTION_DOMAIN: ${{ vars.PROD_DOMAIN }}
      SFDX_DISABLE_DNS_CHECK: true
#     container:
#       image: ${{ vars.DOCKER_REPO_PATH }}
#       credentials:
#         username: ${{ secrets.DOCKER_HUB_UN }}
#         password: ${{ secrets.DOCKER_HUB_PASS }}
    #Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        
      # This will load dependencies in case of cache-hit.
      - name: Caching The Dependencies
        id: cache-sfdx
        uses: actions/cache@v3
        env: 
          cache-name: sfdx-cache-files
        with:
          path: |
            /usr/local/lib/node_modules/@salesforce
            /usr/local/bin/sf
            /home/runner/.local/share/sf
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          
      # This will ensure pipeline execution in case of cache-miss.
      - name: Validating Dependencies
        if: ${{ steps.cache-sfdx.outputs.cache-hit != 'true' }}
        run: chmod +x ./.github/scripts/installdependencies.sh && ./.github/scripts/installdependencies.sh

      # Authenticate The Org and 
      - name: Populate Auth File And Authorize
        run:  chmod +x ./.github/scripts/authenticateorg.sh && ./.github/scripts/authenticateorg.sh
        shell: bash

      # Generate Delta Package
      - name: Generate Delta Packages
        run: chmod +x ./.github/scripts/generatedeltapkg.sh && ./.github/scripts/generatedeltapkg.sh
        
      # Generate Test Classes
      - name: Generate Test Classes
        run: chmod +x ./.github/scripts/generatetestclass.sh && bash .github/scripts/generatetestclass.sh

      # Instantiate PMD Check for the components
      - name: PMD Check
        run: chmod +x ./.github/scripts/scanner.sh && ./.github/scripts/scanner.sh
        if: ${{ env.SOURCE_ORG_ALIAS == 'CI' }}
      
      # Validate the components against CI Org
      - name: Validate
        run: chmod +x ./.github/scripts/validateComponents.sh && ./.github/scripts/validateComponents.sh
        shell: bash

      # Quick Deploy if validation is success
      - name: Quick Deploy
        run: chmod +x ./.github/scripts/quickdeploy.sh && ./.github/scripts/quickdeploy.sh
        shell: bash
        if: ${{ env.SOURCE_ORG_ALIAS != 'CI' }}
      
      # Metadata Components Deploy
      - name: Metadata Migration
        run: chmod +x ./.github/scripts/sfdmu.sh && ./.github/scripts/sfdmu.sh
        if: ${{ env.SOURCE_ORG_ALIAS != 'CI' }}

      # Skuid Pages Deploy
      - name: Deploy skuid pages
        run:  chmod +x ./.github/scripts/skuidpush.sh && ./.github/scripts/skuidpush.sh
        if: ${{ env.SOURCE_ORG_ALIAS != 'CI' }}

      # Upload Artifacts
      - name: Publish Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Build-Report
          path: pipeline-artifacts
